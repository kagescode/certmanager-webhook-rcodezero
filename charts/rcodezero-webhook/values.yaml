# The GroupName here is used to identify your company or business unit that
# created this webhook.
# For example, this may be "acme.mycompany.com".
# This name will need to be referenced in each Issuer's `webhook` stanza to
# inform cert-manager of where to send ChallengePayload resources in order to
# solve the DNS01 challenge.
# This group name should be **unique**, hence using your own company's domain
# here is recommended.
groupName: acme.rcodezero.at

certManager:
  namespace: cert-manager
  serviceAccountName: cert-manager

image:
  repository: ghcr.io/kagescode/certmanager-webhook-rcodezero
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 443

containerport: 8443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
  # limits:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## @section Security Contexts

containerSecurityContext:
  ## @param containerSecurityContext.enabled Whether to enable the container security context
  ##
  enabled: true
  ## @param containerSecurityContext.runAsNonRoot Whether to run the container as a non-root user
  ##
  runAsNonRoot: true
  ## @param containerSecurityContext.privileged Whether the container is privileged
  ##
  privileged: false
  ## @param containerSecurityContext.readOnlyRootFilesystem Whether the root filesystem is read-only
  ##
  readOnlyRootFilesystem: false
  ## @param containerSecurityContext.allowPrivilegeEscalation Whether to allow privilege escalation
  ##
  allowPrivilegeEscalation: false
  ## @extra containerSecurityContext.capabilities Capabilities to add/drop for the container
  ## @skip containerSecurityContext.capabilities.drop
  ##
  capabilities:
    drop: ["ALL"]
  ## @extra containerSecurityContext.seccompProfile Seccomp profile for the container
  ## @skip containerSecurityContext.seccompProfile.type
  ##
  seccompProfile:
    type: "RuntimeDefault"


podSecurityContext:
  ## @param podSecurityContext.enabled Whether to enable the pod security context
  ##
  enabled: true
  ## @param podSecurityContext.fsGroupChangePolicy Policy for changing the fsGroup
  ##
  fsGroupChangePolicy: OnRootMismatch
  ## @param podSecurityContext.sysctls Sysctls for the pod
  ##
  sysctls: []
  ## @param podSecurityContext.supplementalGroups Supplemental groups for the pod
  ##
  supplementalGroups: []

# -- rcodezero Secret API key
# -- To not store it in plain text, use sops or similar.
# -- The secret is not created if not set.
rcodezeroApiToken: ""

features:
  # -- Disable if your Kubernetes cluster doesn't have API Priority and Fairness enabled.
  # -- It is enabled by default since a while.
  apiPriorityAndFairness: true
